<Activity mc:Ignorable="sap sap2010" x:Class="Execute_Query_And_Save_UtilizationDetails" VisualBasic.Settings="{x:Null}" sap:VirtualizedContainerService.HintSize="910,474.66666666666674" sap2010:WorkflowViewState.IdRef="Execute_Query_And_Save_UtilizationDetails_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ue="clr-namespace:UiPath.Excel;assembly=UiPath.Excel.Activities" xmlns:ueab="clr-namespace:UiPath.Excel.Activities.Business;assembly=UiPath.Excel.Activities" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="36">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Database</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Database.Activities</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>UiPath.Excel.Model</x:String>
      <x:String>UiPath.Excel.Activities.Business</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="45">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>UiPath.Database</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Runtime.InteropServices</AssemblyReference>
      <AssemblyReference>UiPath.Database.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="500.6666666666667,410" sap2010:WorkflowViewState.IdRef="Sequence_4">
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="726.6666666666666,2148.6666666666665" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Variables>
        <Variable x:TypeArguments="ui:DatabaseConnection" Name="obj_DB_Connection" />
      </TryCatch.Variables>
      <TryCatch.Try>
        <Sequence DisplayName="Execute_Query_And_Save_UtilizationDetails" sap:VirtualizedContainerService.HintSize="688,1909.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="sd:DataTable" Name="dt_Query_Output" />
            <Variable x:TypeArguments="x:String" Name="str_TenantWiseUtilization_SQL">
              <Variable.Default>
                <Literal x:TypeArguments="x:String" xml:space="preserve">----------- Below query gives details about all jobs through a Manually started jobs
select  T.TenancyName as Tenant_Name,OU.DisplayName as Folder_Name,
Rel.Name as Process_Name,Rel.Description as Process_Discription,--Rel.Unattended,
Rel.JobPriority,NULL as Trigger_Name,
NULL as TimeZoneId,NULL as StartProcessCron,NULL as StartProcessCronDetails,
NULL as LastSuccessfulTime,NULL as Enabled,NULL as QueueDefinitionId
--,J.RobotId
,R.Name as Robot_Name
--,j.MachineId
,M.Name as Machine_Name
,J.HostMachineName
,j.JobPriority,j.Type,j.RuntimeType
,count(j.Id) as Number_Of_Jobs_Executed
,AVG( DATEDIFF(Second, J.StartTime, J.EndTime)) as Average_AHT_Seconds
,MAX( DATEDIFF(Second, J.StartTime, J.EndTime)) as Max_execution_Time_Seconds
from dbo.Tenants T 
inner join dbo.OrganizationUnits OU on T.Id = OU.TenantId
inner join dbo.MachineOrganizationUnits MOU on OU.Id = MOU.OrganizationUnitId
inner join dbo.Machines M on M.ID = MOU.MachineId
inner join dbo.Jobs J on J.MachineId = M.Id
inner join dbo.Releases Rel on J.ReleaseId = Rel.Id
inner join dbo.Robots R on R.Id = J.RobotId
where J.StartingScheduleId is NULL
group by 
 T.TenancyName,OU.DisplayName ,
Rel.Name,Rel.Description,--Rel.Unattended,
Rel.JobPriority,
--j.MachineId,
--J.RobotId,
R.Name,
M.Name,J.HostMachineName,
j.JobPriority,j.Type,j.RuntimeType
Order by
T.TenancyName,OU.DisplayName

-- Job type enum [ Unattended, Attended, ServerlessGeneric ]
-- runtime Enum: [ NonProduction, Attended, Unattended, Development, Studio, RpaDeveloper, StudioX, CitizenDeveloper, Headless, RpaDeveloperPro, StudioPro, TestAutomation, AutomationCloud, Serverless, AutomationKit, ServerlessTestAutomation, AutomationCloudTestAutomation, AttendedStudioWeb ]
-- Job priority enum [ Low, Normal, High ]

--select * from dbo.ProcessSchedules

--select * from dbo.Jobs order by StartTime desc
--select * from dbo.Releases</Literal>
              </Variable.Default>
            </Variable>
            <Variable x:TypeArguments="x:String" Name="str_DB_ConnectionString">
              <Variable.Default>
                <Literal x:TypeArguments="x:String">Data Source=&lt;InstanceName&gt;;Initial Catalog=&lt;DatabaseName&gt;;Persist Security Info=True;User ID=&lt;userid&gt;;Password=&lt;Password&gt;;Encrypt=False</Literal>
              </Variable.Default>
            </Variable>
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:InputDialog Options="{x:Null}" OptionsString="{x:Null}" DisplayName="Input Dialog" sap:VirtualizedContainerService.HintSize="626,246" sap2010:WorkflowViewState.IdRef="InputDialog_1" IsPassword="False" Label="- Please specify connection string from your Orchestrator Web config. &#xD;&#xA;&#xD;&#xA;- DO NOT include the double quotes&#xD;&#xA;&#xD;&#xA;- E.g. Data Source=&lt;InstanceName&gt;;Initial Catalog=&lt;DatabaseName&gt;;Persist Security Info=True;User ID=&lt;userid&gt;;Password=&lt;Password&gt;;Encrypt=False" Title="Please specify connection string from your Orchestrator Web config.  DO NOT include the double quotes.">
            <ui:InputDialog.Result>
              <OutArgument x:TypeArguments="x:String">[str_DB_ConnectionString]</OutArgument>
            </ui:InputDialog.Result>
          </ui:InputDialog>
          <ui:DatabaseConnect DisplayName="Connect to database" sap:VirtualizedContainerService.HintSize="626,60" sap2010:WorkflowViewState.IdRef="DatabaseConnect_1" ProviderName="Microsoft.Data.SqlClient" ConnectionString="[str_DB_ConnectionString]" DatabaseConnection="[Obj_DB_Connection]" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="626,96" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="Info" Message="[&quot;Connection to database established&quot;]" />
          <ui:ReadTextFile File="{x:Null}" Content="[str_TenantWiseUtilization_SQL]" DisplayName="Read Text File" FileName="Query\TenantWiseUtilization.sql" sap:VirtualizedContainerService.HintSize="626,82" sap2010:WorkflowViewState.IdRef="ReadTextFile_1" />
          <ui:ExecuteQuery ContinueOnError="{x:Null}" TimeoutMS="{x:Null}" CommandType="Text" DataTable="[dt_Query_Output]" DisplayName="Run query" ExistingDbConnection="[Obj_DB_Connection]" sap:VirtualizedContainerService.HintSize="626,88.66666666666667" sap2010:WorkflowViewState.IdRef="ExecuteQuery_1" Sql="[str_TenantWiseUtilization_SQL]">
            <ui:ExecuteQuery.Parameters>
              <scg:Dictionary x:TypeArguments="x:String, Argument" />
            </ui:ExecuteQuery.Parameters>
          </ui:ExecuteQuery>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="626,96" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;query execution completed&quot;]" />
          <ueab:ExcelProcessScopeX DisplayAlerts="{x:Null}" ExistingProcessAction="{x:Null}" FileConflictResolution="{x:Null}" LaunchMethod="{x:Null}" LaunchTimeout="{x:Null}" MacroSettings="{x:Null}" ProcessMode="{x:Null}" ShowExcelWindow="{x:Null}" DisplayName="Excel Process Scope" sap:VirtualizedContainerService.HintSize="626,890" sap2010:WorkflowViewState.IdRef="ExcelProcessScopeX_1">
            <ueab:ExcelProcessScopeX.Body>
              <ActivityAction x:TypeArguments="ui:IExcelProcess">
                <ActivityAction.Argument>
                  <DelegateInArgument x:TypeArguments="ui:IExcelProcess" Name="ExcelProcessScopeTag" />
                </ActivityAction.Argument>
                <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="592,802.6666666666666" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ueab:ExcelApplicationCard Password="{x:Null}" ReadFormatting="{x:Null}" DisplayName="Use Excel File" sap:VirtualizedContainerService.HintSize="530,692" sap2010:WorkflowViewState.IdRef="ExcelApplicationCard_1" ResizeWindow="None" WorkbookPath=".data\Tenant_Utilization_Data.xlsx">
                    <ueab:ExcelApplicationCard.Body>
                      <ActivityAction x:TypeArguments="ue:IWorkbookQuickHandle">
                        <ActivityAction.Argument>
                          <DelegateInArgument x:TypeArguments="ue:IWorkbookQuickHandle" Name="Excel" />
                        </ActivityAction.Argument>
                        <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="496,411.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ueab:WriteRangeX Destination="[Excel.Sheet(&quot;Sheet1&quot;).Range(&quot;A1&quot;)]" DisplayName="Write DataTable to Excel" sap:VirtualizedContainerService.HintSize="434,164.66666666666666" sap2010:WorkflowViewState.IdRef="WriteRangeX_1" IgnoreEmptySource="False" Source="[dt_Query_Output]" />
                          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,96" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Query Output saved in excel file&quot;]" />
                        </Sequence>
                      </ActivityAction>
                    </ueab:ExcelApplicationCard.Body>
                  </ueab:ExcelApplicationCard>
                </Sequence>
              </ActivityAction>
            </ueab:ExcelProcessScopeX.Body>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ueab:ExcelProcessScopeX>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="692.6666666666666,22" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence sap:VirtualizedContainerService.HintSize="400,333.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_7">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,96" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="Error" Message="[exception.ToString()]" />
              <ui:MessageBox Caption="{x:Null}" ChosenButton="{x:Null}" AutoCloseAfter="00:00:00" DisplayName="Message Box" sap:VirtualizedContainerService.HintSize="338,86.66666666666667" sap2010:WorkflowViewState.IdRef="MessageBox_2" Text="[exception.ToString()]" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <Sequence sap:VirtualizedContainerService.HintSize="400,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:DatabaseDisconnect DatabaseConnection="[Obj_DB_Connection]" DisplayName="Disconnect from database" sap:VirtualizedContainerService.HintSize="338,25.333333333333332" sap2010:WorkflowViewState.IdRef="DatabaseDisconnect_1" />
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="338,96" sap2010:WorkflowViewState.IdRef="LogMessage_5" Level="Info" Message="[&quot;Connection to database terminated&quot;]" />
        </Sequence>
      </TryCatch.Finally>
    </TryCatch>
  </Sequence>
</Activity>